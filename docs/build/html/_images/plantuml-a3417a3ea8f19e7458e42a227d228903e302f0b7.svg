<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="206px" preserveAspectRatio="none" style="width:303px;height:206px;background:#000000;" version="1.1" viewBox="0 0 303 206" width="303px" zoomAndPan="magnify"><defs/><g><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="261" x="5" y="19">Dot Executable: /opt/local/bin/dot</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="145" x="5" y="35.2969">File does not exist</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="291" x="5" y="51.5938">Cannot find Graphviz. You should try</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="67.8906"/><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="79" x="5" y="84.1875">@startuml</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="57" x="5" y="100.4844">testdot</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="72" x="5" y="116.7813">@enduml</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="133.0781"/><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="17" x="10" y="149.375">or</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="165.6719"/><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="227" x="5" y="181.9688">java -jar plantuml.jar -testdot</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="198.2656"/><!--MD5=[75ecf52ab4afaa966095ec758cbcf9b9]
@startuml

skinparam monochrome true
skinparam defaultFontname Bitstream Vera Sans Mono
skinparam defaultFontSize 18


left to right direction


namespace transformer{
    
  class Transformer {
    .. derived ..
    name : str
    logger : logging.logger
    __
    transform(input_df : DataFrame)
  }
  class Mapper {
    mapping : list
    __
    transform(input_df : DataFrame)
  }
  class Exploder {
    exploded_elem_name : str = "included"
    path_to_array : str = "elem"
    __
    transform(input_df : DataFrame)
  }
  class NewestByGroup {
    group_by : list = ["id"]
    order_by : list = ["updated_at", "deleted_at"]
    __
    transform(input_df : DataFrame)
  }
  class Sieve {
    filter_expression : str
    __
    transform(input_df : DataFrame)
  }
  class ThresholdCleaner {
    thresholds : dict
    __
    transform(input_df : DataFrame)
  }
  class mapper_custom_data_types << (M,orchid) >> {
    add_custom_data_type(function_name, func)
    _get_select_expression_for_custom_type(*mapping_tuple)
  }

  ' Exploder - -|> Transformer
  ' NewestByGroup - -|> Transformer
  ' Mapper - -|> Transformer
  ' Sieve - -|> Transformer
  ' ThresholdCleaner - -|> Transformer
  Transformer - -|> Mapper 
  Mapper <. mapper_custom_data_types : provides custom data types
  Transformer - -|> Exploder
  Transformer - -|> NewestByGroup 
  Transformer - -|> Sieve 
  Transformer - -|> ThresholdCleaner 

}
 @enduml

@startuml

skinparam monochrome true
skinparam defaultFontname Bitstream Vera Sans Mono
skinparam defaultFontSize 18


left to right direction


namespace transformer{
    
  class Transformer {
    .. derived ..
    name : str
    logger : logging.logger
    __
    transform(input_df : DataFrame)
  }
  class Mapper {
    mapping : list
    __
    transform(input_df : DataFrame)
  }
  class Exploder {
    exploded_elem_name : str = "included"
    path_to_array : str = "elem"
    __
    transform(input_df : DataFrame)
  }
  class NewestByGroup {
    group_by : list = ["id"]
    order_by : list = ["updated_at", "deleted_at"]
    __
    transform(input_df : DataFrame)
  }
  class Sieve {
    filter_expression : str
    __
    transform(input_df : DataFrame)
  }
  class ThresholdCleaner {
    thresholds : dict
    __
    transform(input_df : DataFrame)
  }
  class mapper_custom_data_types << (M,orchid) >> {
    add_custom_data_type(function_name, func)
    _get_select_expression_for_custom_type(*mapping_tuple)
  }

  Transformer - -|> Mapper 
  Mapper <. mapper_custom_data_types : provides custom data types
  Transformer - -|> Exploder
  Transformer - -|> NewestByGroup 
  Transformer - -|> Sieve 
  Transformer - -|> ThresholdCleaner 

}
 @enduml

PlantUML version 1.2020.19(Mon Oct 12 17:10:01 CEST 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>