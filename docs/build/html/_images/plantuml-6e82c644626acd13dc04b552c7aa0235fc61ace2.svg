<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="206px" preserveAspectRatio="none" style="width:303px;height:206px;background:#000000;" version="1.1" viewBox="0 0 303 206" width="303px" zoomAndPan="magnify"><defs/><g><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="261" x="5" y="19">Dot Executable: /opt/local/bin/dot</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="145" x="5" y="35.2969">File does not exist</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="291" x="5" y="51.5938">Cannot find Graphviz. You should try</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="67.8906"/><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="79" x="5" y="84.1875">@startuml</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="57" x="5" y="100.4844">testdot</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="72" x="5" y="116.7813">@enduml</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="133.0781"/><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="17" x="10" y="149.375">or</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="165.6719"/><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="227" x="5" y="181.9688">java -jar plantuml.jar -testdot</text><text fill="#A5A5A5" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="198.2656"/><!--MD5=[12c6d2424b1fdc6c1fd8ff63dfc038e0]
@startuml

skinparam monochrome true
skinparam defaultFontname Bitstream Vera Sans Mono
skinparam defaultFontSize 18


' left to right direction

  namespace pipeline {

    class Pipeline {
      input_df : DataFrame = None
      bypass_loader : bool = False
      .. derived ..
      extractor : Extractor = None
      bypass_extractor : bool
      transformers : [Transformer] = []
      loader : Loader = None
      name : str
      logger : logging.logger
      __
      execute()
      extract()
      transform(input_df : DataFrame)
      load(input_df : DataFrame)
      set_extractor(extractor : Extractor)
      add_transformers(transformers : [Transformer])
      clear_transformers()
      set_loader(loader : Loader)
    }

    class PipelineFactory {
      url : str = "http://localhost:5000/pipeline/get"
      __
      execute(context_variables : dict)
      get_metadata(context_variables : dict)
      get_pipeline(context_variables : dict)
    }

    PipelineFactory ..> Pipeline : "creates"

 @enduml

@startuml

skinparam monochrome true
skinparam defaultFontname Bitstream Vera Sans Mono
skinparam defaultFontSize 18



  namespace pipeline {

    class Pipeline {
      input_df : DataFrame = None
      bypass_loader : bool = False
      .. derived ..
      extractor : Extractor = None
      bypass_extractor : bool
      transformers : [Transformer] = []
      loader : Loader = None
      name : str
      logger : logging.logger
      __
      execute()
      extract()
      transform(input_df : DataFrame)
      load(input_df : DataFrame)
      set_extractor(extractor : Extractor)
      add_transformers(transformers : [Transformer])
      clear_transformers()
      set_loader(loader : Loader)
    }

    class PipelineFactory {
      url : str = "http://localhost:5000/pipeline/get"
      __
      execute(context_variables : dict)
      get_metadata(context_variables : dict)
      get_pipeline(context_variables : dict)
    }

    PipelineFactory ..> Pipeline : "creates"

 @enduml

PlantUML version 1.2020.19(Mon Oct 12 17:10:01 CEST 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>